{
  "name": "RSSparsing",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const allKeywords = items\n  .map(item => item.json.Name)\n  .filter(Boolean)\n  .flatMap(value => value.split(','))\n  .map(word => word.trim());\n\nconst joined = allKeywords.join(', ');\n\nreturn [{\n  json: {\n    keywordsArray: allKeywords\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        608,
        0
      ],
      "id": "bae5c1c6-f5bf-462d-aa2e-2b9351f7cd7d",
      "name": "Code"
    },
    {
      "parameters": {
        "fieldToSplitOut": "keywordsArray",
        "include": "allOtherFields",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        752,
        0
      ],
      "id": "bdb49945-cc1e-450e-8a06-6185e34b05a0",
      "name": "Split Out"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1008,
        0
      ],
      "id": "228a7863-b61f-4792-8b6f-f3610c6386f3",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "const html = items[0]?.json?.data ?? \"\";\n\n// помощник: собрать все совпадения первой группы\nfunction extractAll(regex, str) {\n  let m;\n  const results = [];\n  while ((m = regex.exec(str)) !== null) {\n    results.push((m[1] ?? \"\").trim());\n  }\n  return results;\n}\n\nlet channelName = \"\";\nlet channelUsername = \"\";\n\n// Метаданные канала\nconst channelNameMatch = html.match(/<div class=\"tgme_channel_info_header_title\"><span dir=\"auto\">(.*?)<\\/span>/);\nif (channelNameMatch) channelName = channelNameMatch[1];\n\nconst usernameMatch = html.match(/<div class=\"tgme_channel_info_header_username\"><a href=\"https:\\/\\/t\\.me\\/(.*?)\">/);\nif (usernameMatch) channelUsername = usernameMatch[1];\n\n// Разбиваем на блоки постов\nconst postBlocks = html.split('<div class=\"tgme_widget_message_wrap');\n\nconst posts = [];\n\n// Дата-граница: последние 7 дней\nconst now = new Date();\nconst cutoff = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n\nfor (const block of postBlocks) {\n  // Дата поста (Telegram обычно рендерит <time datetime=\"...\">)\n  const timeMatch = block.match(/<time[^>]+datetime=\"([^\"]+)\"/);\n  if (!timeMatch) {\n    // если даты нет — пропускаем (можно убрать это условие, если хотите включать «бездатные» блоки)\n    continue;\n  }\n  const publishedAtStr = timeMatch[1];\n  const publishedAt = new Date(publishedAtStr);\n  if (isNaN(publishedAt.getTime())) continue;      // некорректная дата\n  if (publishedAt < cutoff) continue;               // старше 7 дней — пропускаем\n\n  // Текст поста\n  const textMatch = block.match(/<div class=\"tgme_widget_message_text.*?\"[^>]*>([\\s\\S]*?)<\\/div>/);\n  const text = textMatch\n    ? textMatch[1].replace(/<[^>]+>/g, \"\").replace(/\\s+/g, \" \").trim()\n    : \"\";\n\n  // Картинки (background-image в инлайновых стилях)\n  let images = extractAll(/background-image:url\\('([^']+)'\\)/g, block);\n  images = images.filter(url => !url.includes(\"telegram.org/img/emoji/\"));\n\n  // Видео\n  const videos = extractAll(/<video[^>]+src=\"([^\"]+)\"/g, block);\n\n  // Добавляем только если что-то есть\n  if (text || images.length || videos.length) {\n    posts.push({\n      channelName,\n      channelUsername,\n      publishedAt: publishedAt.toISOString(),\n      text,\n      images,\n      videos,\n    });\n  }\n}\n\n// (опционально) можно ещё ограничить количество, например, первыми 50 после фильтра:\n// const limited = posts.slice(0, 50);\n// return limited.map(p => ({ json: p }));\n\nreturn posts.map(p => ({ json: p }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1424,
        96
      ],
      "id": "e4ba87c1-1b95-4e49-ac6b-8e7faccdb3fc",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ",
          "mode": "list",
          "cachedResultName": "AI_news_Extrcation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1947401037,
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ/edit#gid=1947401037"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Канал": "={{ $json.channelName }}",
            "Текст поста": "={{ $json.text }}",
            "Картинка": "={{ $json.images }}",
            "Видео": "={{ $json.videos }}",
            "Дата": "={{ $json.publishedAt.split('T')[0] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Канал",
              "displayName": "Канал",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Дата",
              "displayName": "Дата",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Текст поста",
              "displayName": "Текст поста",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Картинка",
              "displayName": "Картинка",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Видео",
              "displayName": "Видео",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        1568,
        96
      ],
      "id": "ce61988f-df80-4c38-b28f-1f0d97b92072",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ccc93KreSPNgtM0b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "documentId": {
          "__rl": true,
          "value": "1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ",
          "mode": "list",
          "cachedResultName": "AI_news_Extrcation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1947401037,
          "mode": "list",
          "cachedResultName": "Лист1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ/edit#gid=1947401037"
        },
        "numberToDelete": 999
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        112,
        0
      ],
      "id": "2c39a1ce-b450-41fa-b005-d6f11be21e19",
      "name": "Очистка старой работы",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ccc93KreSPNgtM0b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -32,
        0
      ],
      "id": "9fed1931-88d9-418a-b7a4-c1b6f6f85e50",
      "name": "Запуск"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ",
          "mode": "list",
          "cachedResultName": "AI_news_Extrcation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Список каналов",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        464,
        0
      ],
      "id": "a6699fe8-5b83-4376-9b06-96d502c92dd1",
      "name": "исходники",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ccc93KreSPNgtM0b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://t.me/s/{{$json.keywordsArray}}",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "limit",
              "value": "10"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.0.1 Safari/537.36"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1216,
        96
      ],
      "id": "1aaa7aaf-71da-44bc-afc2-5688ee5d92b1",
      "name": "Парсинг"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Ты — профессиональный редактор и аналитик новостного контента. \nТвоя задача — кратко и понятно суммировать большой набор сообщений из Telegram-канала за указанный период. \nСами сообщения находятся тут:\n{{ $json.textsArray }}\n\nРаботай только с предоставленным текстом постов, не придумывай информацию, которой нет в источнике.\n\nПравила:\n1. Пиши итог на русском языке, ясным и простым стилем.\n2. Выделяй ключевые темы и тенденции, упоминая только важное.\n3. Сокращай повторяющиеся детали и формулировки.\n4. Не используй формат построчного пересказа каждого сообщения — делай цельный текстовый обзор.\n5. Если в постах есть даты, события или анонсы, укажи их кратко и по существу.\n6. Избегай жаргона и лишней \"воды\".\n7. Объем результата — 3–6 предложений или 1 короткий абзац.\n\nФормат вывода:\n— Итоговый текст саммари (без лишних заголовков и служебной информации).\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1824,
        -176
      ],
      "id": "122ae698-8e4e-422a-9cd3-dfdf8004607d",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        1808,
        -16
      ],
      "id": "cd54e354-84d2-4707-b402-677b792d73a1",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "r1KCmfcmXlcsNbrZ",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Собираем тексты всех постов в один блок\n\n// 1) Достаём посты из items и отфильтровываем пустые тексты\nconst posts = items\n  .map(it => it.json)\n  .filter(p => p && typeof p.text === 'string' && p.text.trim().length > 0);\n\n// 2) Сортируем по дате (новые сверху). Если publishedAt отсутствует — в конец.\nposts.sort((a, b) => {\n  const da = a.publishedAt ? new Date(a.publishedAt).getTime() : -Infinity;\n  const db = b.publishedAt ? new Date(b.publishedAt).getTime() : -Infinity;\n  return db - da; // по убыванию даты\n});\n\n// 3) Приводим дату к YYYY-MM-DD (если есть) и формируем строки\nfunction toDateOnly(d) {\n  if (!d) return '';\n  const dt = new Date(d);\n  if (isNaN(dt.getTime())) return String(d); // если дата нестандартная — вернём как есть\n  return dt.toISOString().split('T')[0];\n}\n\nconst lines = posts.map(p => {\n  const date = toDateOnly(p.publishedAt);\n  return date ? `${date} — ${p.text}` : p.text;\n});\n\n// 4) Соединяем в один большой блок (двойной перенос строки между постами)\nconst combinedText = lines.join('\\n\\n');\n\n// 5) Метаданные канала (берём первые непустые)\nconst channelName = (posts.find(p => p.channelName)?.channelName) || '';\nconst channelUsername = (posts.find(p => p.channelUsername)?.channelUsername) || '';\n\n// 6) Результат — один item\nreturn [{\n  json: {\n    channelName,\n    channelUsername,\n    count: posts.length,\n    combinedText,          // весь текст одним блоком\n    textsArray: lines      // на всякий случай — массив строк по постам\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1680,
        -176
      ],
      "id": "fe27a60e-2629-4cde-b514-d7d56ee2274b",
      "name": "Code2"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ",
          "mode": "list",
          "cachedResultName": "AI_news_Extrcation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 447395527,
          "mode": "list",
          "cachedResultName": "Саммари",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ/edit#gid=447395527"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Канал": "={{ $('Code2').item.json.channelName }}",
            "Результат": "={{ $json.output }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Канал",
              "displayName": "Канал",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Результат",
              "displayName": "Результат",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        2112,
        -176
      ],
      "id": "b35a29a0-a742-4d3a-8b17-a3ae01b6a1c2",
      "name": "Append row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ccc93KreSPNgtM0b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "documentId": {
          "__rl": true,
          "value": "1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ",
          "mode": "list",
          "cachedResultName": "AI_news_Extrcation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 447395527,
          "mode": "list",
          "cachedResultName": "Саммари",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1l24bNIjotmDZh790B0e9PRw6z0mwb0X8ADFV4Qq6FtQ/edit#gid=447395527"
        },
        "numberToDelete": 999
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        240,
        0
      ],
      "id": "7c5905ae-a4c0-458e-bfb8-179e469fbcc0",
      "name": "Очистка старой работы1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ccc93KreSPNgtM0b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "-1002630287538",
        "text": "=👁👁👁{{ $json['Канал'] }}👁👁👁\n🟢🟢🟢{{ $json['Результат'] }}",
        "additionalFields": {
          "appendAttribution": false,
          "disable_notification": false,
          "disable_web_page_preview": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2240,
        -176
      ],
      "id": "b22bdb32-dc58-445c-b418-0f1bb48e5028",
      "name": "Send a text message",
      "webhookId": "fbad90fb-4536-4b45-89b1-c7eede4e84e8",
      "credentials": {
        "telegramApi": {
          "id": "sMAtgOgnuCt53UZP",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Парсинг",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Очистка старой работы": {
      "main": [
        [
          {
            "node": "Очистка старой работы1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Запуск": {
      "main": [
        [
          {
            "node": "Очистка старой работы",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "исходники": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Парсинг": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Append row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Очистка старой работы1": {
      "main": [
        [
          {
            "node": "исходники",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet1": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "373cac3c-65cb-4299-853f-192fa6beeaab",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0454a987b356bf406e49af630564044a44537cad05474dab22aaa60e885cad0c"
  },
  "id": "T0eBEeD6n5gCwgLy",
  "tags": []
}
